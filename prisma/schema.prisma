// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int            @id @default(autoincrement())
  name              String
  email             String         @unique
  password          String
  prefered_position String?
  avatar            String?
  bio               String?
  teams             TeamPlayer[]
  comments          CourtComment[]
}

model Court {
  id               Int            @id @default(autoincrement())
  name             String         @unique
  type             String
  image            String?
  lighting_quality Int
  hoop_quality     Int
  usage_frequency  Int
  address          String
  latitude         Decimal
  longitude        Decimal
  matches          Match[]
  comments         CourtComment[]
}

model Team {
  id        Int          @id @default(autoincrement())
  match     Match        @relation(fields: [matchId], references: [id])
  matchId   Int
  players   TeamPlayer[]
  isTeamA   Boolean
  score     Int?
  createdAt DateTime     @default(now())

  @@unique([matchId, isTeamA])
}

model TeamPlayer {
  id        Int      @id @default(autoincrement())
  team      Team     @relation(fields: [teamId], references: [id])
  teamId    Int
  player    User     @relation(fields: [playerId], references: [id])
  playerId  Int
  createdAt DateTime @default(now())

  @@unique([teamId, playerId])
}

model Match {
  id        Int      @id @default(autoincrement())
  court     Court    @relation(fields: [courtId], references: [id])
  courtId   Int
  teams     Team[]
  date      DateTime
  status    String   @default("scheduled")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([courtId, date])
}

model New {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  image     String?
  posted_at DateTime @default(now())
  source    String
}

model CourtComment {
  id        Int      @id @default(autoincrement())
  comment   String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  court     Court    @relation(fields: [courtId], references: [id])
  courtId   Int
  createdAt DateTime @default(now())
}
